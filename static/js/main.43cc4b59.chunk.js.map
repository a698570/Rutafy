{"version":3,"sources":["images/shape.svg","images/logo.svg","components/Main.js","components/ScrollTop.js","components/Menu.js","components/Topbar.js","components/Marker.js","components/Map.js","components/Route.js","components/Api.js","components/Search.js","components/Login.js","components/Favourites.js","components/Profile.js","routes.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","backgroundShape","require","Main","classes","this","props","react_default","a","createElement","Fragment","CssBaseline","className","root","Grid","container","justify","spacing","alignItems","grid","item","xs","md","Paper","paper","box","Typography","style","textTransform","color","gutterBottom","variant","display","justifyContent","Button","actionButtom","href","Component","withRouter","withStyles","theme","flexGrow","backgroundColor","palette","grey","overflow","background","concat","backgroundSize","backgroundPosition","paddingBottom","Object","defineProperty","width","marginTop","breakpoints","down","padding","textAlign","text","secondary","rangeLabel","paddingTop","topBar","outlinedButtom","margin","blockCenter","block","marginBottom","height","inlining","marginRight","buttonBar","alignRight","noBorder","borderBottomStyle","loadingState","opacity","loadingMessage","position","top","left","ScrollToTop","prevProps","location","pathname","window","scrollTo","children","Menu","label","logo","Topbar","state","value","menuDrawer","handleChange","event","_this","setState","mobileMenuOpen","mobileMenuClose","current","i","entry","currentPath","_this2","AppBar","appBar","Toolbar","flex","inline","noWrap","react_router_dom","to","link","src","alt","tagline","noTabs","productLogo","iconContainer","IconButton","onClick","iconButton","aria-label","Menu_default","tabContainer","SwipeableDrawer","anchor","open","onClose","onOpen","title","List","map","index","ListItem","component","external","MaterialLink","Link","search","button","key","ListItemText","primary","Tabs","indicatorColor","textColor","onChange","Tab","tabItem","boxShadow","borderBottom","textDecoration","borderLeft","marginLeft","paddingLeft","up","float","minWidth","Wrapper","styled","div","_templateObject","Marker","_ref","defaultProps","Map","coordinates","zoom","index_modern","center","c","components_Marker","lat","lng","Route","route","length","Math","floor","components_Map","Accordion","AccordionSummary","expandIcon","ExpandMore_default","aria-controls","id","AccordionDetails","Api","_useState","useState","_useState2","slicedToArray","logged","setLogged","_useState3","_useState4","routes","setRoutes","_useState5","_useState6","places","setPlaces","_useState7","_useState8","minutes","setMinutes","_useState9","_useState10","categories","setCategories","_useState11","_useState12","allCategories","setAllCategories","_useState13","_useState14","allPlaces","setAllPlaces","useEffect","token","localStorage","getItem","user","JSON","parse","fetch","method","mode","credentials","then","response","json","data","noValidate","autoComplete","TextField","type","e","Number","target","select","option","MenuItem","searchParams","URLSearchParams","append","toString","doSearch","components_Route","route_id","headers","Authorization","makeFav","username","setUsername","password","setPassword","login","body","setItem","getUser","result","stringify","email","signup","removeItem","ok","newCategories","setNewCategories","addCategories","src_routes","ScrollTop","components_Topbar","react_router","exact","path","Search","Login","Favourites","Profile","createMuiTheme","main","blue","indigo","typography","fontFamily","join","App","ThemeProvider","Boolean","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.43cc4b59.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/shape.208f3d38.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from \"react\";\nimport withStyles from \"@material-ui/styles/withStyles\";\nimport { withRouter } from \"react-router-dom\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\n\nconst backgroundShape = require(\"../images/shape.svg\");\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.grey[\"100\"],\n    overflow: \"hidden\",\n    background: `url(${backgroundShape}) no-repeat`,\n    backgroundSize: \"cover\",\n    backgroundPosition: \"0 400px\",\n    paddingBottom: 200\n  },\n  grid: {\n    width: 1200,\n    marginTop: 40,\n    [theme.breakpoints.down(\"sm\")]: {\n      width: \"calc(100% - 20px)\"\n    }\n  },\n  paper: {\n    padding: theme.spacing(3),\n    textAlign: \"left\",\n    color: theme.palette.text.secondary\n  },\n  rangeLabel: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    paddingTop: theme.spacing(2)\n  },\n  topBar: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    marginTop: 32\n  },\n  outlinedButtom: {\n    textTransform: \"uppercase\",\n    margin: theme.spacing(1)\n  },\n  actionButtom: {\n    textTransform: \"uppercase\",\n    margin: theme.spacing(1),\n    width: 152\n  },\n  blockCenter: {\n    padding: theme.spacing(2),\n    textAlign: \"center\"\n  },\n  block: {\n    padding: theme.spacing(2)\n  },\n  box: {\n    marginBottom: 40,\n    height: 65\n  },\n  inlining: {\n    display: \"inline-block\",\n    marginRight: 10\n  },\n  buttonBar: {\n    display: \"flex\"\n  },\n  alignRight: {\n    display: \"flex\",\n    justifyContent: \"flex-end\"\n  },\n  noBorder: {\n    borderBottomStyle: \"hidden\"\n  },\n  loadingState: {\n    opacity: 0.05\n  },\n  loadingMessage: {\n    position: \"absolute\",\n    top: \"40%\",\n    left: \"40%\"\n  }\n});\n\nclass Main extends Component {\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <React.Fragment>\n        <CssBaseline />\n        <div className={classes.root}>\n          <Grid container justify=\"center\">\n            <Grid\n              spacing={4}\n              alignItems=\"center\"\n              justify=\"center\"\n              container\n              className={classes.grid}\n            >\n              <Grid item xs={12} md={8}>\n                <Paper className={classes.paper}>\n                  <div className={classes.box}>\n                    <Typography\n                      style={{ textTransform: \"uppercase\" }}\n                      color=\"secondary\"\n                      gutterBottom\n                    >\n                      Search routes\n                    </Typography>\n                    <Typography variant=\"body2\" gutterBottom>\n                      Search touristic routes according to your insterests and time\n                    </Typography>\n                  </div>\n                  <div style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\n                    <Button\n                      color=\"primary\"\n                      variant=\"contained\"\n                      className={classes.actionButtom}\n                      href='#search'\n                    >\n                      Go\n                    </Button>\n                  </div>\n                </Paper>\n              </Grid>\n              <Grid item xs={12} md={8}>\n                <Paper className={classes.paper}>\n                  <div className={classes.box}>\n                    <Typography\n                      style={{ textTransform: \"uppercase\" }}\n                      color=\"secondary\"\n                      gutterBottom\n                    >\n                      Favourites\n                    </Typography>\n                    <Typography variant=\"body2\" gutterBottom>\n                      Explore the routes that you marked as favourites\n                    </Typography>\n                  </div>\n                  <div style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\n                    <Button\n                      color=\"primary\"\n                      variant=\"contained\"\n                      className={classes.actionButtom}\n                      href='#favourites'\n                    >\n                      Go\n                    </Button>\n                  </div>\n                </Paper>\n              </Grid>\n              <Grid item xs={12} md={8}>\n                <Paper className={classes.paper}>\n                  <div className={classes.box}>\n                    <Typography\n                      style={{ textTransform: \"uppercase\" }}\n                      color=\"secondary\"\n                      gutterBottom\n                    >\n                      Profile\n                    </Typography>\n                    <Typography variant=\"body2\" gutterBottom>\n                      Update your default search preferences\n                    </Typography>\n                  </div>\n                  <div style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\n                    <Button\n                      color=\"primary\"\n                      variant=\"contained\"\n                      className={classes.actionButtom}\n                      href='#profile'\n                    >\n                      Go\n                    </Button>\n                  </div>\n                </Paper>\n              </Grid>\n              <Grid item xs={12} md={8}>\n                <Paper className={classes.paper}>\n                  <div className={classes.box}>\n                    <Typography\n                      style={{ textTransform: \"uppercase\" }}\n                      color=\"secondary\"\n                      gutterBottom\n                    >\n                      Login\n                    </Typography>\n                    <Typography variant=\"body2\" gutterBottom>\n                      Create an account, log to it or log out\n                    </Typography>\n                  </div>\n                  <div style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\n                    <Button\n                      color=\"primary\"\n                      variant=\"contained\"\n                      className={classes.actionButtom}\n                      href='#login'\n                    >\n                      Go\n                    </Button>\n                  </div>\n                </Paper>\n              </Grid>\n            </Grid>\n          </Grid>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default withRouter(withStyles(styles)(Main));\n","import { Component } from 'react'\nimport { withRouter } from 'react-router-dom'\n\nclass ScrollToTop extends Component {\n    componentDidUpdate(prevProps) {\n      if (this.props.location.pathname !== prevProps.location.pathname) {\n        window.scrollTo(0, 0);\n      }\n    }\n\n    render() {\n      return this.props.children;\n    }\n  }\n\n  export default withRouter(ScrollToTop);\n","const Menu = [\n  {\n    label: \"Home\",\n    pathname: \"/\"\n  },\n  {\n    label: \"Search\",\n    pathname: \"/search\"\n  },\n  {\n    label: \"Favourites\",\n    pathname: \"/favourites\"\n  },\n  {\n    label: \"Profile\",\n    pathname: \"/profile\"\n  },\n  {\n    label: \"Login\",\n    pathname: \"/login\"\n  }\n];\n\nexport default Menu;\n","import React, { Component } from \"react\";\nimport withStyles from \"@material-ui/styles/withStyles\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport SwipeableDrawer from \"@material-ui/core/SwipeableDrawer\";\nimport { Link as MaterialLink } from \"@material-ui/core\";\nimport Menu from \"./Menu\";\n\nconst logo = require(\"../images/logo.svg\");\n\nconst styles = theme => ({\n  appBar: {\n    position: \"relative\",\n    boxShadow: \"none\",\n    borderBottom: `1px solid ${theme.palette.grey[\"100\"]}`,\n    backgroundColor: \"white\"\n  },\n  inline: {\n    display: \"inline\"\n  },\n  flex: {\n    display: \"flex\",\n    [theme.breakpoints.down(\"sm\")]: {\n      display: \"flex\",\n      justifyContent: \"space-evenly\",\n      alignItems: \"center\"\n    }\n  },\n  link: {\n    textDecoration: \"none\",\n    color: \"inherit\"\n  },\n  productLogo: {\n    display: \"inline-block\",\n    borderLeft: `1px solid ${theme.palette.grey[\"A100\"]}`,\n    marginLeft: 32,\n    paddingLeft: 24,\n    [theme.breakpoints.up(\"md\")]: {\n      paddingTop: \"1.5em\"\n    }\n  },\n  tagline: {\n    display: \"inline-block\",\n    marginLeft: 10,\n    [theme.breakpoints.up(\"md\")]: {\n      paddingTop: \"0.8em\"\n    }\n  },\n  iconContainer: {\n    display: \"none\",\n    [theme.breakpoints.down(\"sm\")]: {\n      display: \"block\"\n    }\n  },\n  iconButton: {\n    float: \"right\"\n  },\n  tabContainer: {\n    marginLeft: 32,\n    [theme.breakpoints.down(\"sm\")]: {\n      display: \"none\"\n    }\n  },\n  tabItem: {\n    paddingTop: 20,\n    paddingBottom: 20,\n    minWidth: \"auto\"\n  }\n});\n\nclass Topbar extends Component {\n  state = {\n    value: 0,\n    menuDrawer: false\n  };\n\n  handleChange = (event, value) => {\n    this.setState({ value });\n  };\n\n  mobileMenuOpen = event => {\n    this.setState({ menuDrawer: true });\n  };\n\n  mobileMenuClose = event => {\n    this.setState({ menuDrawer: false });\n  };\n\n  componentDidMount() {\n    window.scrollTo(0, 0);\n  }\n\n  current = () => {\n    let i = 0;\n    for (const entry in Menu) {\n      if (this.props.currentPath === entry['pathname']) {\n        return i;\n      }\n      i++;\n    }\n  };\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <AppBar position=\"absolute\" color=\"default\" className={classes.appBar}>\n        <Toolbar>\n          <Grid container spacing={10} alignItems=\"baseline\">\n            <Grid item xs={12} className={classes.flex}>\n              <div className={classes.inline}>\n                <Typography variant=\"h6\" color=\"inherit\" noWrap>\n                  <Link to=\"/\" className={classes.link}>\n                    <img width={20} src={logo} alt=\"\" />\n                    <span className={classes.tagline}>Rutafy</span>\n                  </Link>\n                </Typography>\n              </div>\n              {!this.props.noTabs && (\n                <React.Fragment>\n                  <div className={classes.productLogo}>\n                    <Typography>Find your route</Typography>\n                  </div>\n                  <div className={classes.iconContainer}>\n                    <IconButton\n                      onClick={this.mobileMenuOpen}\n                      className={classes.iconButton}\n                      color=\"inherit\"\n                      aria-label=\"Menu\"\n                    >\n                      <MenuIcon />\n                    </IconButton>\n                  </div>\n                  <div className={classes.tabContainer}>\n                    <SwipeableDrawer\n                      anchor=\"right\"\n                      open={this.state.menuDrawer}\n                      onClose={this.mobileMenuClose}\n                      onOpen={this.mobileMenuOpen}\n                    >\n                      <AppBar title=\"Menu\" />\n                      <List>\n                        {Menu.map((item, index) => (\n                          <ListItem\n                            component={item.external ? MaterialLink : Link}\n                            href={item.external ? item.pathname : null}\n                            to={\n                              item.external\n                                ? null\n                                : {\n                                    pathname: item.pathname,\n                                    search: this.props.location.search\n                                  }\n                            }\n                            button\n                            key={item.label}\n                          >\n                            <ListItemText primary={item.label} />\n                          </ListItem>\n                        ))}\n                      </List>\n                    </SwipeableDrawer>\n                    <Tabs\n                      value={this.current() || this.state.value}\n                      indicatorColor=\"primary\"\n                      textColor=\"primary\"\n                      onChange={this.handleChange}\n                    >\n                      {Menu.map((item, index) => (\n                        <Tab\n                          key={index}\n                          component={item.external ? MaterialLink : Link}\n                          href={item.external ? item.pathname : null}\n                          to={\n                            item.external\n                              ? null\n                              : {\n                                  pathname: item.pathname,\n                                  search: this.props.location.search\n                                }\n                          }\n                          classes={{ root: classes.tabItem }}\n                          label={item.label}\n                        />\n                      ))}\n                    </Tabs>\n                  </div>\n                </React.Fragment>\n              )}\n            </Grid>\n          </Grid>\n        </Toolbar>\n      </AppBar>\n    );\n  }\n}\n\nexport default withRouter(withStyles(styles)(Topbar));\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  width: 18px;\n  height: 18px;\n  background-color: #000;\n  border: 2px solid #fff;\n  border-radius: 100%;\n  user-select: none;\n  transform: translate(-50%, -50%);\n  cursor: ${(props) => (props.onClick ? 'pointer' : 'default')};\n  &:hover {\n    z-index: 1;\n  }\n`;\n\nconst Marker = ({ text, onClick }) => (\n  <Wrapper\n    alt={text}\n    onClick={onClick}\n  />\n);\n\nMarker.defaultProps = {\n  onClick: null,\n};\n\nMarker.propTypes = {\n  onClick: PropTypes.func,\n  text: PropTypes.string.isRequired,\n};\n\nexport default Marker;\n","import GoogleMapReact from \"google-map-react\";\nimport Marker from \"./Marker\";\nimport React from \"react\";\n\nfunction Map({coordinates, zoom}) {\n    return (\n        <div style={{height: '50vh', width: '100%'}}>\n            <GoogleMapReact\n                center={coordinates[0]}\n                zoom={zoom}>\n                {coordinates.map(c => (\n                    <Marker\n                        lat={c.lat}\n                        lng={c.lng}\n                    />\n                ))}\n\n            </GoogleMapReact>\n        </div>\n    )\n}\n\nexport default Map;\n","import React from \"react\";\n\nimport Typography from \"@material-ui/core/Typography\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Accordion from \"@material-ui/core/Accordion\";\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Map from \"./Map\"\n\nfunction Route(props) {\n    let route = props.route;\n    let coordinates = route['places'].map(p => (\n        {\n            lat: p['location']['coordinates'][0],\n            lng: p['location']['coordinates'][1]\n        }\n    ))\n    return (\n        <Paper>\n            <div>\n                <Typography\n                    style={{textTransform: \"uppercase\"}}\n                    color=\"secondary\"\n                    gutterBottom\n                >\n                    {route['places'].length > 4 ?\n                        route['places'][0]['name'] + ' - ' +\n                        route['places'][1]['name'] + ' - ' +\n                        '... - ' +\n                        route['places'][route['places'].length - 2]['name'] + ' - ' +\n                        route['places'][route['places'].length - 1]['name'] :\n                        route['places'].map(p => p['name'] + ' - ')\n                    }\n                </Typography>\n                <Typography variant=\"body2\" gutterBottom>\n                    Duration: {route['minutes']} minutes (>{Math.floor(route['minutes'] / 60)} hours)\n                </Typography>\n                <Map coordinates={coordinates} zoom={7}/>\n\n                {route['places'].map(p => (\n\n                    <div>\n                        <Accordion>\n                            <AccordionSummary\n                                expandIcon={<ExpandMoreIcon/>}\n                                aria-controls=\"panel1a-content\"\n                                id=\"panel1a-header\"\n                            >\n                                <Typography variant=\"subtitle1\" color=\"secondary\" gutterBottom>\n                                    {p['name']}\n                                </Typography>\n                            </AccordionSummary>\n                            <AccordionDetails>\n\n                                <Typography variant=\"body2\" gutterBottom>\n                                    Coordinates: {\n                                    p['location']['coordinates'][0] +\n                                    ' , ' +\n                                    p['location']['coordinates'][1]\n                                }\n                                    <br/><br/>\n                                    {p['description']}\n                                </Typography>\n                            </AccordionDetails>\n                        </Accordion>\n                    </div>\n                ))}\n            </div>\n        </Paper>\n    )\n}\n\nexport default Route\n","const Api = 'https://rutafy.herokuapp.com';\n\nexport default Api;\n","import React, {useEffect, useState} from \"react\";\nimport {withRouter} from \"react-router-dom\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Route from \"./Route\";\nimport Api from \"./Api\";\n\nfunction Search() {\n    const [logged, setLogged] = useState(false)\n    const [routes, setRoutes] = useState([])\n    const [places, setPlaces] = useState([])\n    const [minutes, setMinutes] = useState(120)\n    const [categories, setCategories] = useState([])\n    const [allCategories, setAllCategories] = useState([])\n    const [allPlaces, setAllPlaces] = useState([])\n\n    useEffect(() => {\n        let token = localStorage.getItem('token')\n        if (token) {\n            setLogged(true)\n        } else {\n            setLogged(false)\n        }\n    }, [])\n\n    useEffect(() => {\n        let user = localStorage.getItem('user')\n        if (user) {\n            let categories = JSON.parse(user)['categories']\n            setCategories(categories)\n        } else {\n            setCategories([])\n        }\n    }, [])\n\n    useEffect(() => {\n        fetch(Api + '/categories',\n            {\n                method: 'GET',\n                mode: 'cors',\n                credentials: 'include',\n            })\n            .then(response => response.json())\n            .then(data => setAllCategories(data));\n    }, [])\n\n    useEffect(() => {\n        fetch(Api + '/places/names',\n            {\n                method: 'GET',\n                mode: 'cors',\n                credentials: 'include',\n            })\n            .then(response => response.json())\n            .then(data => setAllPlaces(data));\n    }, [])\n\n    const doSearch = () => {\n        let searchParams = new URLSearchParams();\n\n        searchParams.append('minutes', minutes.toString());\n        categories.map(c => searchParams.append('categories', c));\n        places.map(p => searchParams.append('places_names', p));\n\n        fetch(Api + '/routes?' + searchParams.toString(),\n            {\n                method: 'GET',\n                mode: 'cors',\n                credentials: 'include',\n            })\n            .then(response => response.json())\n            .then(data => setRoutes(data))\n    }\n\n    const clear = () => {\n        setCategories([])\n        setPlaces([])\n    }\n\n    const makeFav = route_id => {\n        let token = window.localStorage['token']\n        fetch(Api + '/routes/' + route_id + '/fav',\n            {\n                method: 'POST',\n                mode: 'cors',\n                credentials: 'include',\n                headers: {'Authorization': 'Bearer ' + token}\n            })\n    }\n\n    return (\n        <React.Fragment>\n            <CssBaseline/>\n            <div>\n                <Grid container justify=\"center\">\n                    <Grid\n                        spacing={4}\n                        alignItems=\"center\"\n                        justify=\"center\"\n                        container\n                    >\n                        <Grid item xs={12}>\n                            <Paper>\n                                <div>\n                                    <Typography\n                                        style={{textTransform: \"uppercase\"}}\n                                        color=\"secondary\"\n                                        gutterBottom\n                                    >\n                                        Search route\n                                    </Typography>\n                                    <form noValidate autoComplete=\"off\">\n                                        <TextField\n                                            id=\"minutes\"\n                                            label=\"Minutes\"\n                                            type=\"number\"\n                                            value={minutes}\n                                            onChange={e => setMinutes(Number(e.target.value))}/>\n                                        <TextField\n                                            id=\"categories\"\n                                            label=\"Add category\"\n                                            select\n                                            value={allCategories.length > 0 ? allCategories[0] : ''}\n                                            onChange={e => setCategories(categories.concat(e.target.value))}>\n                                            {allCategories.map(option => (\n                                                <MenuItem key={option} value={option}>\n                                                    {option}\n                                                </MenuItem>\n                                            ))}\n                                        </TextField>\n                                        <TextField\n                                            id=\"places\"\n                                            label=\"Add place\"\n                                            select\n                                            value={allPlaces.length > 0 ? allPlaces[0] : ''}\n                                            onChange={e => setPlaces(places.concat(e.target.value))}>\n                                            {allPlaces.map(option => (\n                                                <MenuItem key={option} value={option}>\n                                                    {option}\n                                                </MenuItem>\n                                            ))}\n                                        </TextField>\n                                    </form>\n                                    <Typography variant=\"body2\" gutterBottom>\n                                        Categories: {categories.map(c => c + ', ')}\n                                    </Typography>\n                                    <Typography variant=\"body2\" gutterBottom>\n                                        Places: {places.map(p => p + ', ')}\n                                    </Typography>\n                                </div>\n                                <div style={{display: \"flex\", justifyContent: \"flex-end\"}}>\n                                    <Button\n                                        color=\"primary\"\n                                        variant=\"contained\"\n                                        onClick={() => {\n                                            doSearch();\n                                        }}\n                                    >\n                                        Search\n                                    </Button>\n                                    <Button\n                                        color=\"primary\"\n                                        variant=\"contained\"\n                                        onClick={() => {\n                                            clear();\n                                        }}\n                                    >\n                                        Clear\n                                    </Button>\n                                </div>\n                            </Paper>\n                        </Grid>\n                        {logged !== true ? (\n                                <Typography\n                                    variant=\"body1\"\n                                    gutterBottom\n                                >\n                                    Please, log in to mark routes as favourites.\n                                </Typography>)\n                            : null\n                        }\n                        {routes.map(route => (\n                            <Grid item xs={12} md={6}>\n                                <Paper>\n                                    <Route route={route}/>\n                                    {logged === true ? (\n                                            <div style={{display: \"flex\", justifyContent: \"flex-end\"}}>\n                                                <Button\n                                                    color=\"primary\"\n                                                    variant=\"contained\"\n                                                    onClick={() => makeFav(route['id'])}\n                                                >\n                                                    Favorite\n                                                </Button>\n                                            </div>)\n                                        : null}\n                                </Paper>\n                            </Grid>\n                        ))}\n                    </Grid>\n                </Grid>\n            </div>\n        </React.Fragment>\n    )\n}\n\nexport default withRouter(Search);\n","import React, {useEffect, useState} from \"react\";\nimport {withRouter} from \"react-router-dom\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Api from \"./Api\";\n\nfunction Login() {\n    const [username, setUsername] = useState('')\n    const [password, setPassword] = useState('')\n    const [logged, setLogged] = useState(false)\n\n    useEffect(() => {\n        let token = localStorage.getItem('token')\n        if (token) {\n            setLogged(true)\n        } else {\n            setLogged(false)\n        }\n    }, [])\n\n    const login = () => {\n        let searchParams = new URLSearchParams();\n\n        searchParams.append('username', username);\n        searchParams.append('password', password);\n\n        fetch(Api + '/token',\n            {\n                method: 'POST',\n                mode: 'cors',\n                credentials: 'include',\n                body: searchParams\n            })\n            .then(response => response.json())\n            .then(data => {\n                localStorage.setItem('token', data['access_token'])\n                setLogged(true)\n                getUser()\n            })\n    }\n\n    const signup = () => {\n        let body = {email: username, password: password}\n\n        fetch(Api + '/user',\n            {\n                method: 'POST',\n                mode: 'cors',\n                credentials: 'include',\n                body: JSON.stringify(body)\n            })\n            .then(response => response.json())\n            .then(() => login())\n    }\n\n    const getUser = () => {\n        let token = window.localStorage['token']\n        fetch(Api + '/user',\n            {\n                method: 'GET',\n                mode: 'cors',\n                credentials: 'include',\n                headers: {'Authorization': 'Bearer ' + token}\n            })\n            .then(result => result.json())\n            .then(data => localStorage.setItem('user', JSON.stringify(data)))\n    }\n\n    const logout = () => {\n        localStorage.removeItem('token')\n        localStorage.removeItem('user')\n        setLogged(false)\n    }\n\n    return (\n        <React.Fragment>\n            <CssBaseline/>\n            <div>\n                <Grid container justify=\"center\">\n                    <Grid\n                        spacing={4}\n                        alignItems=\"center\"\n                        justify=\"center\"\n                        container\n                    >\n                        <Grid item xs={12}>\n                            <Paper>\n                                <div>\n                                    <Typography\n                                        style={{textTransform: \"uppercase\"}}\n                                        color=\"secondary\"\n                                        gutterBottom\n                                    >\n                                        Login\n                                    </Typography>\n                                </div>\n                                {logged !== true ?\n                                    (\n                                        <div>\n                                            <div>\n                                                <form noValidate autoComplete=\"off\">\n                                                    <TextField\n                                                        id=\"username\"\n                                                        label=\"username\"\n                                                        value={username}\n                                                        onChange={e => setUsername(e.target.value)}/>\n                                                    <TextField\n                                                        id=\"password\"\n                                                        label=\"password\"\n                                                        type=\"password\"\n                                                        value={password}\n                                                        onChange={e => setPassword(e.target.value)}/>\n                                                </form>\n                                            </div>\n                                            <div style={{display: \"flex\", justifyContent: \"flex-end\"}}>\n                                                <Button\n                                                    color=\"primary\"\n                                                    variant=\"contained\"\n                                                    onClick={() => {\n                                                        login();\n                                                    }}\n                                                >\n                                                    Login\n                                                </Button>\n                                                <Button\n                                                    color=\"primary\"\n                                                    variant=\"contained\"\n                                                    onClick={() => {\n                                                        signup();\n                                                    }}\n                                                >\n                                                    Signup\n                                                </Button>\n                                            </div>\n                                        </div>) :\n                                    (<div>\n                                        <Typography\n                                            variant=\"body1\"\n                                            gutterBottom\n                                        >\n                                            You are logged in.\n                                        </Typography>\n                                        <div style={{display: \"flex\", justifyContent: \"flex-end\"}}>\n                                            <Button\n                                                color=\"primary\"\n                                                variant=\"contained\"\n                                                onClick={() => {\n                                                    logout();\n                                                }}\n                                            >\n                                                Logout\n                                            </Button>\n                                        </div>\n                                    </div>)\n                                }\n                            </Paper>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </div>\n        </React.Fragment>)\n}\n\nexport default withRouter(Login);\n","import React, {useEffect, useState} from \"react\";\nimport {withRouter} from \"react-router-dom\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Route from \"./Route\";\nimport Api from \"./Api\";\n\nfunction Favourites() {\n    const [logged, setLogged] = useState(false)\n    const [routes, setRoutes] = useState([])\n\n    useEffect(() => {\n        let token = localStorage.getItem('token')\n        if (token) {\n            setLogged(true)\n            fetch(Api + '/fav/routes',\n                {\n                    method: 'GET',\n                    mode: 'cors',\n                    credentials: 'include',\n                    headers: {'Authorization': 'Bearer ' + token}\n                })\n                .then(response => response.ok ? response.json() : [])\n                .then(data => setRoutes(data));\n        } else {\n            setLogged(false)\n        }\n    }, [])\n\n    return (\n        <React.Fragment>\n            <CssBaseline/>\n            <div>\n                <Grid container justify=\"center\">\n                    <Grid\n                        spacing={4}\n                        alignItems=\"center\"\n                        justify=\"center\"\n                        container\n                    >\n                        <Grid item xs={12}>\n                            <Typography\n                                style={{textTransform: \"uppercase\"}}\n                                color=\"secondary\"\n                                gutterBottom\n                            >\n                                Favourite routes\n                            </Typography>\n                        </Grid>\n                        {logged !== true ?\n                            (<Typography\n                                variant=\"body1\"\n                                gutterBottom\n                            >\n                                Please, log in to view your favourite routes\n                            </Typography>)\n                            :\n                            routes.map(route => (\n                                <Grid item xs={12} md={6}>\n                                    <Route route={route}/>\n                                </Grid>\n                            ))}\n                    </Grid>\n                </Grid>\n            </div>\n        </React.Fragment>)\n}\n\nexport default withRouter(Favourites);\n","import React, {useEffect, useState} from \"react\";\nimport {withRouter} from \"react-router-dom\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Button from \"@material-ui/core/Button\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Api from \"./Api\";\n\nfunction Profile() {\n    const [logged, setLogged] = useState(false)\n    const [categories, setCategories] = useState([])\n    const [newCategories, setNewCategories] = useState([])\n    const [allCategories, setAllCategories] = useState([])\n\n    useEffect(() => {\n        let token = localStorage.getItem('token')\n        if (token) {\n            setLogged(true)\n        } else {\n            setLogged(false)\n        }\n    }, [])\n\n    useEffect(() => {\n        let user = localStorage.getItem('user')\n        if (user) {\n            let categories = JSON.parse(user)['categories']\n            setCategories(categories)\n        } else {\n            setCategories([])\n        }\n    }, [])\n\n    useEffect(() => {\n        fetch(Api + '/categories',\n            {\n                method: 'GET',\n                mode: 'cors',\n                credentials: 'include',\n            })\n            .then(response => response.json())\n            .then(data => setAllCategories(data));\n    }, [])\n\n    const addCategories = () => {\n        let token = window.localStorage['token']\n        fetch(Api + '/user/categories',\n            {\n                method: 'POST',\n                mode: 'cors',\n                credentials: 'include',\n                body: JSON.stringify(newCategories),\n                headers: {'Authorization': 'Bearer ' + token}\n            })\n            .then(response => {\n                if (response.ok) {\n                    response.json().then(user => {\n                        setCategories(user['categories'])\n                        localStorage.setItem('user', JSON.stringify(user))\n                    })\n                }\n            })\n    }\n\n    return (\n        <React.Fragment>\n            <CssBaseline/>\n            <div>\n                <Grid container justify=\"center\">\n                    <Grid\n                        spacing={4}\n                        alignItems=\"center\"\n                        justify=\"center\"\n                        container\n                    >\n                        <Grid item xs={12}>\n                            <Paper>\n                                <Typography\n                                    style={{textTransform: \"uppercase\"}}\n                                    color=\"secondary\"\n                                    gutterBottom\n                                >\n                                    Profile\n                                </Typography>\n                                {logged !== true ?\n                                    (<Typography\n                                        variant=\"body1\"\n                                        gutterBottom\n                                    >\n                                        Please, log in to view your profile\n                                    </Typography>)\n                                    :\n                                    <div>\n                                        <Typography\n                                            variant=\"body1\"\n                                            gutterBottom\n                                        >\n                                            Your categories: {categories.map(c => (c + ', '))}\n                                        </Typography>\n                                        <Paper>\n                                            <div>\n                                                <Typography\n                                                    color=\"secondary\"\n                                                    variant=\"subtitle1\"\n                                                    gutterBottom\n                                                >\n                                                    Add new categories\n                                                </Typography>\n                                                <form noValidate autoComplete=\"off\">\n                                                    <TextField\n                                                        id=\"categories\"\n                                                        label=\"Add category\"\n                                                        select\n                                                        value={allCategories.length > 0 ? allCategories[0] : ''}\n                                                        onChange={e => setNewCategories(newCategories.concat(e.target.value))}>\n                                                        {allCategories.map(option => (\n                                                            <MenuItem key={option} value={option}>\n                                                                {option}\n                                                            </MenuItem>\n                                                        ))}\n                                                    </TextField>\n                                                </form>\n                                                <Typography variant=\"body2\" gutterBottom>\n                                                    New categories: {newCategories.map(c => c + ', ')}\n                                                </Typography>\n                                            </div>\n                                            <div style={{display: \"flex\", justifyContent: \"flex-end\"}}>\n                                                <Button\n                                                    color=\"primary\"\n                                                    variant=\"contained\"\n                                                    onClick={() => {\n                                                        addCategories();\n                                                    }}\n                                                >\n                                                    Add\n                                                </Button>\n                                            </div>\n                                        </Paper>\n                                    </div>\n                                }\n                            </Paper>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </div>\n        </React.Fragment>)\n}\n\nexport default withRouter(Profile);\n","import React from 'react'\nimport {Route, HashRouter, Switch} from 'react-router-dom'\nimport Main from './components/Main'\nimport ScrollToTop from './components/ScrollTop'\nimport Topbar from \"./components/Topbar\";\nimport Search from \"./components/Search\";\nimport Login from \"./components/Login\";\nimport Favourites from \"./components/Favourites\";\nimport Profile from \"./components/Profile\";\n\nexport default props => (\n    <HashRouter>\n        <ScrollToTop>\n            <Topbar/>\n            <Switch>\n                <Route exact path='/' component={Main}/>\n                <Route exact path='/search' component={Search}/>\n                <Route exact path='/login' component={Login}/>\n                <Route exact path='/favourites' component={Favourites}/>\n                <Route exact path='/profile' component={Profile}/>\n            </Switch>\n        </ScrollToTop>\n    </HashRouter>\n)\n","import React, { Component } from 'react';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles'\nimport './App.css';\nimport Routes from './routes'\nimport { blue, indigo } from '@material-ui/core/colors'\n\nconst theme = createMuiTheme({\n  palette: {\n    secondary: {\n      main: blue[900]\n    },\n    primary: {\n      main: indigo[700]\n    }\n  },\n  typography: {\n    // Use the system font instead of the default Roboto font.\n    fontFamily: [\n      '\"Lato\"',\n      'sans-serif'\n    ].join(',')\n  }\n});\n\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <ThemeProvider theme={theme}>\n          <Routes />\n        </ThemeProvider>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}